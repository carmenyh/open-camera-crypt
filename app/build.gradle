apply plugin: 'com.android.application'

android {
    compileSdkVersion 24
    buildToolsVersion "25.0.0"
    compileOptions.encoding = 'UTF-8'

    defaultConfig {
        applicationId "net.sourceforge.opencamera"
        minSdkVersion 15
        targetSdkVersion 24

        renderscriptTargetApi 20
        //renderscriptSupportModeEnabled true // don't use support library as it bloats the APK, and we don't need pre-4.4 support
        //need build tools higher than 20 at least to support ScriptIntrinsicHistogram

        testApplicationId "net.sourceforge.opencamera.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    lintOptions {
        checkReleaseBuilds false
    }
}

configurations {
    fortify { extendsFrom compile }
}

dependencies {
    fortify 'com.fortify:sourceanalyzer:16.10'
    compile 'com.android.support:support-v4:24.0.0'
    testCompile 'junit:junit:4.12'
    compile files('libs/spongy-castle-core-1.54.0.0.jar')
    compile files('libs/commons-cli-1.3.1.jar')
}

task fortifyReport(dependsOn: assemble) << {
	ant.properties['build.compiler']='com.fortify.dev.ant.SCACompiler'
    ant.typedef(name: 'sca', classname: 'com.fortify.dev.ant.SourceanalyzerTask',
    classpath: configurations.fortify.asPath)
    ant.sca(jdk:"1.7",
       debug:true ,
       verbose:true ,
       failonerror:true ,
       scan:true ,
       logFile:file("$buildDir/reports/fortify/Fortify.log"),
       resultsFile:file("$buildDir/reports/fortify/asdf.fpr")
    ){
       fileset(dir:'src/main') {
          include(name:'**/*.java')
       }
    }
}
